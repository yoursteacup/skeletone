diff --git a/README.md b/README.md
new file mode 100644
index 0000000..55805c5
--- /dev/null
+++ b/README.md
@@ -0,0 +1,14 @@
+# Skeletone
+
+A minimal, well-toned Python project skeleton for fast development.  
+Built on top of **FastAPI**, **SQLAlchemy**, and **Alembic**.
+
+# Diffmake for skeletone upgrade
+ - `git commit` - skeletone updated
+ - `git tag` - tagged
+ - `git diff <prv_tag> <cur_tag> > patches/<prv_tag>_to_<cur_tag>.path` - diff ready 
+ - `git add` - added
+ - `git push` - pushed
+
+## Author
+Developer: Zhaxybayev Daulet
\ No newline at end of file
diff --git a/app/dependencies/__init__.py b/app/dependencies/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/app/dependencies/authorization.py b/app/dependencies/authorization.py
new file mode 100644
index 0000000..edb2098
--- /dev/null
+++ b/app/dependencies/authorization.py
@@ -0,0 +1,13 @@
+from fastapi import Header, HTTPException
+
+from config import settings
+
+SECRET_KEY = settings.app.secret_key
+
+
+async def authorize(secret_key: str = Header(alias="Authorization")) -> None:
+    if not secret_key or not secret_key.startswith("Bearer "):
+        raise HTTPException(
+            status_code=401,
+            detail="Missing or invalid Authorization header"
+        )
diff --git a/app/routes/__init__.py b/app/routes/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/patches/v1.1.0_to_v.1.2.0.patch b/patches/v1.1.0_to_v.1.2.0.patch
new file mode 100644
index 0000000..268907a
--- /dev/null
+++ b/patches/v1.1.0_to_v.1.2.0.patch
@@ -0,0 +1,46 @@
+diff --git a/code_quality.sh b/code_quality.sh
+index 3083171..237054c 100755
+--- a/code_quality.sh
++++ b/code_quality.sh
+@@ -2,21 +2,36 @@
+ 
+ set -e
+ 
+-# Run flake8, pylint, mypy and capture their exit statuses
++overall_status=0
++
+ flake8 ./
+ flake8_status=$?
++if [[ $flake8_status -ne 0 ]]; then
++  overall_status=1
++fi
+ 
+ pylint ./
+ pylint_status=$?
++if [[ $pylint_status -ne 0 ]]; then
++  overall_status=1
++fi
+ 
+ mypy app/
+ mypy_status=$?
++if [[ $mypy_status -ne 0 ]]; then
++  overall_status=1
++fi
+ 
+ bandit -r app/
+ bandit_status=$?
++if [[ $bandit_status -ne 0 ]]; then
++  overall_status=1
++fi
+ 
+-# Fail the job if any tool failed
+-if [[ $flake8_status -ne 0 || $pylint_status -ne 0 || $mypy_status -ne 0 || $bandit_status -ne 0 ]]; then
++if [[ $overall_status -ne 0 ]]; then
+   echo "Code quality checks failed."
+   exit 1
+-fi
++else
++  echo "All code quality checks passed!"
++  exit 0
++fi
+\ No newline at end of file
