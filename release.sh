#!/usr/bin/env bash
set -euo pipefail

usage() {
  cat <<EOF
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
  $0 <tag> "<—Å–æ–æ–±—â–µ–Ω–∏–µ —Ä–µ–ª–∏–∑–∞>" "<—Å–æ–æ–±—â–µ–Ω–∏–µ –ø–∞—Ç—á–∞>"

–ü—Ä–∏–º–µ—Ä:
  $0 v1.2.0 "Release v1.2.0: improved API" \
           "Patch: fixed migration edge cases"
EOF
  exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
(( $# == 3 )) || usage
TAG=$1
RELEASE_MSG=$2
PATCH_MSG=$3

SCRIPT_NAME=$(basename "$0")

# --- –®–∞–≥ 1: –∫–æ–º–º–∏—Ç —Ä–µ–ª–∏–∑–∞ ---
echo "‚Üí 1) –î–æ–±–∞–≤–ª—è–µ–º –∏ –∫–æ–º–º–∏—Ç–∏–º —Ä–µ–ª–∏–∑‚Ä¶"
git add .
echo
git diff --staged
echo
read -rp "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∫–æ–º–º–∏—Ç —Ä–µ–ª–∏–∑–∞? [y/N] " yn
[[ $yn =~ ^[Yy] ]] || { echo "–û—Ç–º–µ–Ω–µ–Ω–æ."; exit 1; }
git commit -m "$RELEASE_MSG"
git push

# --- –®–∞–≥ 2: —Ç–µ–≥ –∏ –ø—É—à —Ç–µ–≥–æ–≤ ---
echo
echo "‚Üí 2) –°—Ç–∞–≤–∏–º —Ç–µ–≥ $TAG –∏ –ø—É—à–∏–º‚Ä¶"
git tag -a "$TAG" -m "$RELEASE_MSG"
git push origin --tags

# --- –®–∞–≥ 3: –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–∞—Ç—á–∞ ---
echo
echo "‚Üí 3) –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–∏—Ñ—Ñ-–ø–∞—Ç—á‚Ä¶"
# –Ω–∞—Ö–æ–¥–∏–º –¥–≤–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ç–µ–≥–∞ –ø–æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è
LATEST_TAG=$(git tag --sort=-creatordate | head -n 1)
PREV_TAG=$(git tag --sort=-creatordate | head -n 2 | tail -n 1)
if [ -z "$LATEST_TAG" ] || [ -z "$PREV_TAG" ]; then
  echo "‚ùóÔ∏è –û—à–∏–±–∫–∞: –Ω—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º –¥–≤–∞ —Ç–µ–≥–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞—Ç—á–∞."
  exit 1
fi

mkdir -p patches
PATCH_FILE="patches/${PREV_TAG}_to_${LATEST_TAG}.patch"

git diff "$PREV_TAG" "$LATEST_TAG" \
  -- . ':!patches/' ':!README.md' ":!$SCRIPT_NAME" \
  > "$PATCH_FILE"
echo "‚úî –ü–∞—Ç—á —Å–æ—Ö—Ä–∞–Ω—ë–Ω: $PATCH_FILE"

# --- –®–∞–≥ 4: –∫–æ–º–º–∏—Ç –ø–∞—Ç—á–∞ ---
echo
echo "‚Üí 4) –ö–æ–º–º–∏—Ç–∏–º –ø–∞—Ç—á‚Ä¶"
git add patches/
echo
git diff --cached
echo
read -rp "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∫–æ–º–º–∏—Ç –ø–∞—Ç—á–∞? [y/N] " yn
[[ $yn =~ ^[Yy] ]] || { echo "–û—Ç–º–µ–Ω–µ–Ω–æ."; exit 1; }
git commit -m "$PATCH_MSG"
git push

echo
echo "üéâ –í—Å–µ —à–∞–≥–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã: —Ä–µ–ª–∏–∑ $TAG –∏ –ø–∞—Ç—á –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã."